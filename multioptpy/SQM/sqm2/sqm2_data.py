import numpy as np


class SQM2Parameters:
    def __init__(self):
        self._set_global_params()
        self._set_repulsion_params()
        self._set_srb_params()
        self._set_eeq_params()
        self._set_basisfunc_param()
        self._set_hamiltonian_params()
        self._set_dispersion_params()
        self._set_bond_param()
    
    def _set_global_params(self):
        # SRB parameters
        self.k_srb = -0.013
        self.eta_srb = 3.48
        self.g_scal_srb = 0.51
        self.c_1_srb = -1.71
        self.c_2_srb = 2.11
        
        # D3(0) 2-body dispersion parameters
        self.s6 = 1.00
        self.s8 = 0.58
        self.beta_6 = 12
        self.beta_8 = 14
        
        # EHT parameters
        
        self.k_ss_eht = 2.00
        self.k_pp_eht = 2.49
        self.k_dd_eht = 2.27
        self.k_sp_eht = 0.5 * (self.k_ss_eht + self.k_pp_eht)
        self.k_sd_eht = 0.5 * (self.k_ss_eht + self.k_dd_eht)
        self.k_pd_eht = 0.5 * (self.k_pp_eht + self.k_dd_eht)
        
        self.k_hh_2s2s = 0.00
    
        self.k_ss_en_eht = 0.006
        self.k_pp_en_eht = -0.001
        self.k_dd_en_eht = -0.002
        self.k_sp_en_eht = 0.5 * (self.k_ss_en_eht + self.k_pp_en_eht)
        self.k_sd_en_eht = 0.5 * (self.k_ss_en_eht + self.k_dd_en_eht)
        self.k_pd_en_eht = 0.5 * (self.k_pp_en_eht + self.k_dd_en_eht)
        
        self.b_en_eht = 4.00
        
        self.k_MM_pair = 1.10
        self.k_g11_pair = 0.90 # for Cu, Ag, Au

        # bond parameters
        self.eta_bond = 1.0
        self.k_en_bond = 1.0

        return

    def _set_repulsion_params(self):
        #E_rep =  ZeffA * ZeffB / R_AB  * exp(-alpha_AB * R_AB ** 3)
        self.repAlpha = np.array([
            2.1885472, 2.2714498, 0.6634645, 0.9267640, 1.1164621,
            1.2680750, 1.6211038, 2.1037547, 2.2062651, 1.9166982,
            0.8129781, 0.8408742, 0.8361156, 0.8859465, 1.0684151,
            1.1882871, 1.4429448, 1.1993811, 0.5700050, 0.8345430,
            0.6840185, 0.7915733, 1.0676223, 0.9216746, 1.1151815,
            1.1883881, 1.1895339, 1.2692713, 1.1734165, 1.0018764,
            1.1597304, 1.1708353, 1.2085038, 1.1161800, 1.3193094,
            0.7670615, 0.6171015, 0.8421909, 0.6513468, 0.6906528,
            0.8705783, 0.9711021, 1.0252504, 0.9847071, 1.0559061,
            1.0645317, 0.9139636, 0.9095541, 0.9965441, 1.0676257,
            1.0759855, 0.8659486, 0.9301733, 0.8139884, 0.5842740,
            0.8070627, 0.6961124, 0.7599095, 0.7667071, 0.7735047,
            0.7803023, 0.7870999, 0.7938975, 0.8006951, 0.8074927,
            0.8142903, 0.8210879, 0.8278855, 0.8346831, 0.8414808,
            0.8482784, 0.8803684, 0.9915500, 0.9875716, 1.1535600,
            1.1418384, 1.1434832, 1.1783705, 1.0591477, 0.9794378,
            1.2439938, 1.0437958, 1.1391049, 0.9115474, 0.9157573,
            0.8137168]) 
        
        self.repZeff = np.array([
            1.2455414, 1.3440060, 1.1710492, 2.9064151, 4.4020866,
            4.3101011, 4.5460146, 4.7850603, 7.3393960, 4.2503997,
            10.5220970, 7.7916659, 11.3886282, 13.9495563, 16.7912135,
            13.3874290, 13.9700526, 14.4971987, 13.8061512, 13.9719788,
            10.9127447, 13.4067871, 16.7322903, 21.8192969, 22.8754319,
            25.2196212, 26.9753662, 27.2652026, 26.2195102, 14.3840374,
            25.4102208, 43.7565690, 34.9344472, 22.8724870, 34.2378269,
            15.1027639, 39.1086736, 32.7340796, 18.6398784, 22.6163764,
            27.6545601, 37.8625561, 40.9844265, 30.0686254, 35.5737255,
            28.4443233, 25.9740558, 28.8257081, 53.9657064, 88.0203443,
            82.7978295, 39.3120212, 49.7072042, 45.1199137, 55.2536842,
            50.0381164, 48.0939804, 46.1827790, 46.0844595, 45.9861400,
            45.8878205, 45.7895010, 45.6911815, 45.5928620, 45.4945424,
            45.3962229, 45.2979034, 45.1995839, 45.1012644, 45.0029449,
            44.9046254, 41.1538255, 46.6524574, 53.4995959, 73.8197012,
            59.6567627, 50.0720023, 49.4064531, 44.5201114, 39.7677937,
            58.8051943, 103.0123579, 85.5566053, 70.6036525, 82.8260761,
            68.9676875])
        
        self.rep_cutoff = 40.0
        
    def _set_srb_params(self):
        self.en_data_srb = np.array([
                        2.30085633, 2.78445145, 1.52956084, 1.51714704, 2.20568300,
                        2.49640820, 2.81007174, 4.51078438, 4.67476223, 3.29383610,
                        2.84505365, 2.20047950, 2.31739628, 2.03636974, 1.97558064,
                        2.13446570, 2.91638164, 1.54098156, 2.91656301, 2.26312147,
                        2.25621439, 1.32628677, 2.27050569, 1.86790977, 2.44759456,
                        2.49480042, 2.91545568, 3.25897750, 2.68723778, 1.86132251,
                        2.01200832, 1.97030722, 1.95495427, 2.68920990, 2.84503857,
                        2.61591858, 2.64188286, 2.28442252, 1.33011187, 1.19809388,
                        1.89181390, 2.40186898, 1.89282464, 3.09963488, 2.50677823,
                        2.61196704, 2.09943450, 2.66930105, 1.78349472, 2.09634533,
                        2.00028974, 1.99869908, 2.59072029, 2.54497829, 2.52387890,
                        2.30204667, 1.60119300, 2.00000000, 2.00000000, 2.00000000,
                        2.00000000, 2.00000000, 2.00000000, 2.00000000, 2.00000000,
                        2.00000000, 2.00000000, 2.00000000, 2.00000000, 2.00000000,
                        2.00000000, 2.30089349, 1.75039077, 1.51785130, 2.62972945,
                        2.75372921, 2.62540906, 2.55860939, 3.32492356, 2.65140898,
                        1.52014458, 2.54984804, 1.72021963, 2.69303422, 1.81031095,
                        2.34224386])
        
        self.r0_data_srb = np.array([
                        0.55682207, 0.80966997, 2.49092101, 1.91705642, 1.35974851,
                        0.98310699, 0.98423007, 0.76716063, 1.06139799, 1.17736822,
                        2.85570926, 2.56149012, 2.31673425, 2.03181740, 1.82568535,
                        1.73685958, 1.97498207, 2.00136196, 3.58772537, 2.68096221,
                        2.23355957, 2.33135502, 2.15870365, 2.10522128, 2.16376162,
                        2.10804037, 1.96460045, 2.00476257, 2.22628712, 2.43846700,
                        2.39408483, 2.24245792, 2.05751204, 2.15427677, 2.27191920,
                        2.19722638, 3.80910350, 3.26020971, 2.99716916, 2.71707818,
                        2.34950167, 2.11644818, 2.47180659, 2.32198800, 2.32809515,
                        2.15244869, 2.55958313, 2.59141300, 2.62030465, 2.39935278,
                        2.56912355, 2.54374096, 2.56914830, 2.53680807, 4.24537037,
                        3.66542289, 3.19903011, 2.80000000, 2.80000000, 2.80000000,
                        2.80000000, 2.80000000, 2.80000000, 2.80000000, 2.80000000,
                        2.80000000, 2.80000000, 2.80000000, 2.80000000, 2.80000000,
                        2.80000000, 2.34880037, 2.37597108, 2.49067697, 2.14100577,
                        2.33473532, 2.19498900, 2.12678348, 2.34895048, 2.33422774,
                        2.86560827, 2.62488837, 2.88376127, 2.75174124, 2.83054552,
                        2.63264944]) 


        return

    def _set_dispersion_params(self):
        # D3(0) 2-body dispersion parameters
        self.r4r2 = np.array([8.0589, 3.4698, 29.0974, 14.8517, 11.8799, 7.8715, 5.5588, 
            4.7566, 3.8025, 3.1036,
            26.1552, 17.2304, 17.7210, 12.7442, 9.5361, 
            8.1652, 6.7463, 5.6004,
            29.2012, 22.3934,
            19.0598, 16.8590, 15.4023, 12.5589, 13.4788,
            12.2309, 11.2809, 10.5569, 10.1428, 9.4907,
            13.4606, 10.8544, 8.9386, 8.1350, 7.1251, 6.1971,
            30.0162, 24.4103,
            20.3537, 17.4780, 13.5528, 11.8451, 11.0355,
            10.1997, 9.5414, 9.0061, 8.6417, 8.9975,
            14.0834, 11.8333, 10.0179, 9.3844, 8.4110, 7.5152,
            32.7622, 27.5708,
            23.1671, 21.6003, 20.9615, 20.4562, 20.1010, 
            19.7475, 19.4828,
            15.6013, 19.2362, 17.4717, 17.8321, 17.4237, 
            17.1954, 17.1631,
            14.5716, 15.8758, 13.8989, 12.4834, 11.4421,
            10.2671, 8.3549, 7.8496, 7.3278, 7.4820,
            13.5124, 11.6554, 10.0959, 9.7340, 8.8584, 8.0125])

        self.d2_vdw = np.array([1.001, 1.012, 0.825, 1.408, 1.485, 1.452, 1.397, 1.342, 1.287, 1.243,
            1.144, 1.364, 1.639, 1.716, 1.705, 1.683, 1.639, 1.595,
            1.485, 1.474, 1.562, 1.562, 1.562, 1.562, 1.562, 1.562, 1.562, 1.562, 1.562,
            1.650, 1.727, 1.760, 1.771, 1.749, 1.727, 1.628, 1.606, 1.639, 1.639, 1.639, 1.639,
            1.639, 1.639, 1.639, 1.639, 1.639, 1.639, 1.639, 1.639, 1.639, 1.639, 1.639, 1.639,
            1.881, 1.892, 1.892, 1.881, 1.802, 1.762, 1.720, 1.753, 1.753, 1.753, 1.753, 1.753,
            1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753,
            1.753, 1.753, 1.753, 1.753, 1.753, 1.788, 1.772, 1.772, 1.772, 1.772, 1.772, 1.772,
            1.772, 1.772, 1.772, 1.772, 1.772, 1.772, 1.772, 1.772, 1.772, 1.772, 1.772, 1.772, 
            1.898, 2.005, 1.991, 1.924]) * 1.88972612463# Bohr

        bohr2angstroms = 0.52917721067
        hartree2j = 4.3597447222071 * 10 ** (-18)
        mol2au = 6.02214076 * 10 ** 23
        
        self.c6 = np.array([0.14, 0.08, 1.61, 1.61, 3.13, 1.75, 1.23, 0.70, 0.75, 0.63,
            5.71, 5.71, 10.79, 9.23, 7.84, 5.57, 5.07, 4.61,
            10.80, 10.80,
             10.80, 10.80, 10.80, 10.80, 10.80,
             10.80, 10.80, 10.80, 10.80, 10.80,
             16.99, 17.10, 16.37, 12.64, 12.47, 12.01,
             24.67, 24.67,
            24.67, 24.67, 24.67, 24.67, 24.67,
             24.67, 24.67, 24.67, 24.67, 24.67,
             37.32, 38.71, 38.44, 31.74, 31.50, 29.99,
             50.00, 50.00,
             50.00, 50.00, 50.00, 50.00, 50.00, 50.00,
             50.00, 50.00, 50.00, 50.00, 50.00,
             50.00, 50.00, 50.00, 
             50.00, 50.00, 50.00, 50.00, 50.00, 
             50.00, 50.00, 50.00, 50.00,
             50.00, 50.00, 50.00, 50.00, 50.00]) * 10 ** 6 / bohr2angstroms ** 6 / hartree2j / mol2au # in Hartree·Bohr^6


    def _set_eeq_params(self):
        # Electronegativity parameters
        self.eeqChi = np.array([
            1.2500000, 1.2912463, 0.8540050, 1.1723939, 1.1094487,
            1.3860275, 1.5341534, 1.5378836, 1.5890750, 1.2893646,
            0.7891208, 0.9983021, 0.9620847, 1.0441134, 1.4789559,
            1.3926377, 1.4749100, 1.2250415, 0.8162292, 1.1252036,
            0.9641451, 0.8810155, 0.9741986, 1.1029038, 1.0076949,
            0.7744353, 0.7554040, 1.0182630, 1.0316167, 1.6317474,
            1.1186739, 1.0345958, 1.3090772, 1.4119283, 1.4500674,
            1.1746889, 0.6686200, 1.0744648, 0.9107813, 0.7876056,
            1.0039889, 0.9225265, 0.9035515, 1.0332301, 1.0293975,
            1.0549549, 1.2356867, 1.2793315, 1.1145650, 1.1214927,
            1.2123167, 1.4003158, 1.4255511, 1.1640198, 0.4685133,
            1.0687873, 0.9335398, 1.0573550, 1.0532043, 1.0490537,
            1.0449031, 1.0407524, 1.0366018, 1.0324512, 1.0283005,
            1.0241499, 1.0199992, 1.0158486, 1.0116980, 1.0075473,
            1.0033967, 0.8612827, 1.0422031, 0.7633168, 0.6019707,
            0.7499393, 0.9511744, 0.9357472, 1.3555382, 1.2006726,
            1.2092025, 1.1736669, 1.1936584, 1.3045488, 1.1964604,
            1.2653792
        ])
        # Chemical hardness parameters
        self.eeqGam = np.array([
            -0.3023159, 0.7743046, 0.5303164, 0.2176474, 0.1956176,
            0.0308461, 0.0559522, 0.0581228, 0.1574017, 0.6825784,
            0.3922376, 0.5581866, 0.3017510, 0.1039137, 0.2124917,
            0.0580720, 0.2537467, 0.5780354, 0.3920658, -0.0024897,
            -0.0061520, 0.1663252, 0.1051751, 0.0009900, 0.0976543,
            0.0612028, 0.0561526, 0.0899774, 0.1313171, 0.5728071,
            0.1741615, 0.2671888, 0.2351989, 0.0718104, 0.3458143,
            0.8203265, 0.4287770, 0.2667067, 0.0873658, 0.0599431,
            0.1581972, 0.1716374, 0.2721649, 0.2817608, 0.1391572,
            0.1175925, 0.2316104, 0.2256303, 0.1230459, 0.0141941,
            0.0188612, 0.0230207, 0.3644113, 0.1668461, 0.5167533,
            0.1979578, 0.0345176, 0.0240233, 0.0246333, 0.0252433,
            0.0258532, 0.0264632, 0.0270732, 0.0276832, 0.0282931,
            0.0289031, 0.0295131, 0.0301230, 0.0307330, 0.0313430,
            0.0319529, 0.0262881, 0.1715396, 0.1803633, 0.3631824,
            0.3010980, 0.1100299, 0.0277514, 0.0554975, 0.7723231,
            0.1287718, 0.1034598, 0.0114935, 0.0160842, 0.3369611,
            0.1844179
        ])
        # element_dependent_factor for the element_vector X
        self.eeqkCN = np.array([
            0.0248762, 0.1342276, 0.0103048, -0.0352374, -0.0980031,
            0.0643920, 0.1053273, 0.1394809, 0.1276675, -0.1081936,
            -0.0008132, -0.0279860, -0.0521436, -0.0257206, 0.1651461,
            0.0914418, 0.1213634, -0.0636298, -0.0045838, 0.0007509,
            -0.0307730, -0.0286150, -0.0341465, -0.0419655, -0.0088536,
            -0.1001069, -0.1190502, -0.0726233, -0.0219233, 0.0641913,
            -0.0103130, 0.0262628, 0.0222202, 0.0709954, 0.0422244,
            -0.0308245, 0.0086249, -0.0237146, -0.0721798, -0.0848810,
            -0.0402828, -0.0372396, -0.0027043, 0.0525839, 0.0051192,
            0.0188401, 0.0103998, 0.0000549, 0.0087717, -0.0237228,
            0.0169656, 0.0924186, 0.0352884, -0.0091444, 0.0192916,
            -0.0154483, -0.0736833, -0.0064191, -0.0093012, -0.0121833,
            -0.0150654, -0.0179475, -0.0208296, -0.0237117, -0.0265938,
            -0.0294759, -0.0323580, -0.0352400, -0.0381221, -0.0410042,
            -0.0438863, -0.0894776, -0.0333583, -0.0154963, -0.0121092,
            -0.0744239, 0.0050138, -0.0153757, -0.0029221, 0.0239125,
            0.0183012, -0.0238011, -0.0268025, 0.0136505, -0.0132199,
            -0.0439890
        ])
        # atomic radii for eeq model
        self.eeqAlp = np.array([
            0.7490227, 0.4196569, 1.4256190, 2.0698743, 1.7358798,
            1.8288757, 1.9346081, 1.6974795, 0.8169179, 0.6138441,
            1.7294046, 1.7925036, 1.2156739, 1.5314457, 1.3730859,
            1.7936326, 2.4255996, 1.5891656, 2.1829647, 1.4177623,
            1.5181399, 1.9919805, 1.7171675, 2.0655063, 1.3318009,
            1.3660068, 1.5694128, 1.2762644, 1.0039549, 0.7338863,
            3.2596250, 1.7530299, 1.5281792, 2.1837813, 2.1642027,
            2.7280594, 0.7838049, 1.4274742, 1.8023947, 1.6093288,
            1.3834349, 1.1740977, 1.5768259, 1.3205263, 1.4259466,
            1.1499748, 0.7013009, 1.2374416, 1.3799991, 1.8528424,
            1.8497568, 2.0159294, 1.2903708, 2.0199161, 0.9530522,
            1.5015025, 2.1917012, 1.9134370, 1.9897910, 2.0661450,
            2.1424991, 2.2188531, 2.2952071, 2.3715611, 2.4479151,
            2.5242691, 2.6006231, 2.6769771, 2.7533312, 2.8296852,
            2.9060392, 1.6423047, 1.3567622, 1.8966648, 0.8253100,
            0.7412219, 1.0350883, 0.9692278, 1.0048087, 2.3138674,
            2.8055966, 3.0968677, 1.6597596, 3.2191575, 1.5388148,
            2.1222013
        ])
        self.eeq_covalent_radii = np.array([0.32, 0.46, 1.33, 1.02, 0.85, 0.75, 0.71, 0.63, 0.64, 0.67, 
           1.55, 1.39, 1.26, 1.16, 1.11, 1.03, 0.99, 0.96, 
           1.96, 1.71, 1.48, 1.36, 1.34, 1.22, 1.19, 1.16, 1.11, 1.10, 1.12, 1.18, 1.24, 1.24, 1.21, 1.16, 1.14, 1.17, 
           2.10, 1.85, 1.63, 1.54, 1.47, 1.38, 1.28, 1.25, 1.25, 1.20, 1.28, 1.36, 1.42, 1.40, 1.40, 1.36, 1.33, 1.31,
           2.32, 1.96, 1.80, 1.63, 1.76, 1.74, 1.73, 1.72, 1.68, 1.69, 1.68, 1.67, 1.66, 1.65, 1.64, 1.70, 1.62, 1.52, 1.46, 1.37, 1.31, 1.29, 1.22, 1.23, 1.24, 1.33, 1.44, 1.44, 1.51, 1.45, 1.47, 1.42]) * 1.889726134 #Bohr.
            # ref. Pekka Pyykkö; Michiko Atsumi (2009). “Molecular single-bond covalent radii for elements 1 - 118”. Chemistry: A European Journal 15: 186–197. doi:10.1002/chem.200800987. (H...Rn)


    def _set_hamiltonian_params(self):
        # Number of shells
        self.nShell = np.array([
            2, 2, 2, 2, 2, 2, 2,
            2, 2, 3, 2, 3, 3, 3,
            3, 3, 3, 3, 2, 3, 3,
            3, 3, 3, 3, 3, 3, 3,
            3, 2, 3, 3, 3, 3, 3,
            3, 2, 3, 3, 3, 3, 3,
            3, 3, 3, 3, 3, 2, 3,
            3, 3, 3, 3, 3, 2, 3,
            3, 3, 3, 3, 3, 3, 3,
            3, 3, 3, 3, 3, 3, 3,
            3, 3, 3, 3, 3, 3, 3,
            2, 2, 2, 2, 2, 3, 3], dtype=np.int64)

        # Angular momentum of each shell
        self.angShell = np.array([
            [0, 0, 0],  [0, 1, 0],  [0, 1, 0],  [0, 1, 0],  [0, 1, 0],  [0, 1, 0],  [0, 1, 0],
            [0, 1, 0],  [0, 1, 0],  [0, 1, 2],  [0, 1, 0],  [0, 1, 2],  [0, 1, 2],  [0, 1, 2],
            [0, 1, 2],  [0, 1, 2],  [0, 1, 2],  [0, 1, 2],  [0, 1, 0],  [0, 1, 2],  [2, 0, 1],
            [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],
            [2, 0, 1],  [0, 1, 0],  [0, 1, 2],  [0, 1, 2],  [0, 1, 2],  [0, 1, 2],  [0, 1, 2],
            [0, 1, 2],  [0, 1, 0],  [0, 1, 2],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],
            [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [0, 1, 0],  [0, 1, 2],
            [0, 1, 2],  [0, 1, 2],  [0, 1, 2],  [0, 1, 2],  [0, 1, 2],  [0, 1, 0],  [0, 1, 2],
            [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],
            [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],
            [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],  [2, 0, 1],
            [2, 0, 1],  [2, 0, 1],  [0, 1, 0],  [0, 1, 0],  [0, 1, 0],  [0, 1, 0],  [0, 1, 0],
            [0, 1, 2],  [0, 1, 2]], dtype=np.int64)

        # Principal quantum number of each shell
        self.principalQuantumNumber = np.array([
            [1, 2, 0],  [1, 2, 0],  [2, 2, 0],  [2, 2, 0],  [2, 2, 0],  [2, 2, 0],  [2, 2, 0],
            [2, 2, 0],  [2, 2, 0],  [2, 2, 3],  [3, 3, 0],  [3, 3, 3],  [3, 3, 3],  [3, 3, 3],
            [3, 3, 3],  [3, 3, 3],  [3, 3, 3],  [3, 3, 3],  [4, 4, 0],  [4, 4, 3],  [3, 4, 4],
            [3, 4, 4],  [3, 4, 4],  [3, 4, 4],  [3, 4, 4],  [3, 4, 4],  [3, 4, 4],  [3, 4, 4],
            [3, 4, 4],  [4, 4, 0],  [4, 4, 4],  [4, 4, 4],  [4, 4, 4],  [4, 4, 4],  [4, 4, 4],
            [4, 4, 4],  [5, 5, 0],  [5, 5, 4],  [4, 5, 5],  [4, 5, 5],  [4, 5, 5],  [4, 5, 5],
            [4, 5, 5],  [4, 5, 5],  [4, 5, 5],  [4, 5, 5],  [4, 5, 5],  [5, 5, 0],  [5, 5, 5],
            [5, 5, 5],  [5, 5, 5],  [5, 5, 5],  [5, 5, 5],  [5, 5, 5],  [6, 6, 0],  [6, 6, 5],
            [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],
            [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],
            [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],  [5, 6, 6],
            [5, 6, 6],  [5, 6, 6],  [6, 6, 0],  [6, 6, 0],  [6, 6, 0],  [6, 6, 0],  [6, 6, 0],
            [6, 6, 5],  [6, 6, 5]], dtype=np.int64)

        # Electronegativity
        self.electronegativity = np.array([
            1.92,  3.00,  0.98,  1.57,  2.04,
            2.48,  2.97,  3.44,  3.50,  3.50,
            0.93,  1.31,  1.61,  1.90,  2.19,
            2.58,  3.16,  3.50,  1.45,  1.80,
            1.73,  1.54,  1.63,  1.66,  1.55,
            1.83,  1.88,  1.91,  1.90,  1.65,
            1.81,  2.01,  2.18,  2.55,  2.96,
            3.00,  1.50,  1.50,  1.55,  1.33,
            1.60,  2.16,  1.90,  2.20,  2.28,
            2.20,  1.93,  1.69,  1.78,  1.96,
            2.05,  2.10,  2.66,  2.60,  1.50,
            1.60,  1.50,  1.50,  1.50,  1.50,
            1.50,  1.50,  1.50,  1.50,  1.50,
            1.50,  1.50,  1.50,  1.50,  1.50,
            1.50,  1.30,  1.50,  2.36,  1.90,
            2.20,  2.20,  2.28,  2.54,  2.00,
            1.62,  2.33,  2.02,  2.00,  2.20,
            2.20], dtype=np.float64)

        self.shellPoly = np.array([
            [-3.6355142,  0.00000000,  0.0000000,  0.0000000],
            [-12.4694067,  5.12004200,  0.0000000,  0.0000000],
            [-9.1309270, 26.45499410,  0.0000000,  0.0000000],
            [-23.0556019, 12.29400490,  0.0000000,  0.0000000],
            [-13.0296301, -3.80008460,  0.0000000,  0.0000000],
            [-12.8096830, -8.82326510,  0.0000000,  0.0000000],
            [-12.6808155, -8.80380760,  0.0000000,  0.0000000],
            [-16.1325184, -5.51085690,  0.0000000,  0.0000000],
            [-1.9980582, -15.34156120,  0.0000000,  0.0000000],
            [-19.0634182, -17.94052850,  2.9172938,  0.0000000],
            [-1.9038223, 20.51582340,  0.0000000,  0.0000000],
            [-23.8821588,  6.21983350, 16.9907381,  0.0000000],
            [-25.9314993, 10.02183490,  5.7458163,  0.0000000],
            [-14.0752116, -18.03006400, 13.1379417,  0.0000000],
            [-22.5131801, -15.13429710, 31.3131980,  0.0000000],
            [-27.9640046, -12.62869290, 25.8298106,  0.0000000],
            [-25.6075631, -14.26984150, 37.2632140,  0.0000000],
            [-26.8745198, -16.37147400, 21.6207312,  0.0000000],
            [1.7106901, 24.43233360,  0.0000000,  0.0000000],
            [-21.2288327, -3.23987870, 13.9882752,  0.0000000],
            [5.3449585, 25.37163520, -31.0302574,  0.0000000],
            [21.1807596, 24.93452780, -26.2283413,  0.0000000],
            [7.0558197, 26.90006100, -31.3799774,  0.0000000],
            [2.0452996, 27.02537350, -15.1553980,  0.0000000],
            [-2.9359221, 29.37855170, -27.4411979,  0.0000000],
            [6.2785647, 28.40737540, -25.0617776,  0.0000000],
            [2.7815688, 22.85568860, -22.1545572,  0.0000000],
            [-6.3873757, 18.50679430, -20.6965198,  0.0000000],
            [-9.3513228,  8.03612800, -25.4274699,  0.0000000],
            [-20.5283728, 18.31637340,  0.0000000,  0.0000000],
            [-25.9659007,  0.24932040, 31.9811359,  0.0000000],
            [-22.5969796, -13.07779110, 29.8243400,  0.0000000],
            [-27.5975320, -20.15791270, 33.9750529,  0.0000000],
            [-24.4009201, -18.49323350, 31.6569329,  0.0000000],
            [-22.8480620, -20.46239210, 32.3160404,  0.0000000],
            [-29.6544708, -11.81015280, 26.3649672,  0.0000000],
            [-3.9550260, 17.81029220,  0.0000000,  0.0000000],
            [-20.4705547, -5.66237750,  1.1533441,  0.0000000],
            [-14.8904419, 32.75122970, -24.8248233,  0.0000000],
            [-1.2323670, 31.35218880, -25.4108005,  0.0000000],
            [-20.1589551, 23.91255900, -28.9368791,  0.0000000],
            [10.4647630, 25.70713940, -27.1881494,  0.0000000],
            [17.2824035, 26.97508400, -27.0119119,  0.0000000],
            [6.3119382, 27.76646610, -26.3813902,  0.0000000],
            [1.1913117, 25.13980880, -19.0998367,  0.0000000],
            [7.5528381, 31.60282550, -24.7810390,  0.0000000],
            [-7.4614740, 11.91715850, -24.0147360,  0.0000000],
            [-21.1131335, 24.22912690,  0.0000000,  0.0000000],
            [-28.0671409, -2.16073050, 30.6807055,  0.0000000],
            [-21.2192117, -7.23565880, 12.8333865,  0.0000000],
            [-25.9808690, -16.80154040, 34.5734795,  0.0000000],
            [-21.3500803, -20.83440960, 36.7357631,  0.0000000],
            [-27.3671183, -19.62221140, 33.1425727,  0.0000000],
            [-29.8202170, -16.61175030, 21.1953313,  0.0000000],
            [-12.1334296, 18.86964700,  0.0000000,  0.0000000],
            [-22.8455123, -9.98368600,  3.4483973,  0.0000000],
            [-15.6183059, 33.47909370, -25.5526873,  0.0000000],
            [-15.6451743, 25.92955660, -31.4845028,  0.0000000],
            [-15.6344636, 26.14183290, -31.4071167,  0.0000000],
            [-15.6237528, 26.35410920, -31.3297306,  0.0000000],
            [-15.6130421, 26.56638560, -31.2523445,  0.0000000],
            [-15.6023314, 26.77866190, -31.1749584,  0.0000000],
            [-15.5916207, 26.99093820, -31.0975723,  0.0000000],
            [-15.5809100, 27.20321460, -31.0201862,  0.0000000],
            [-15.5701992, 27.41549090, -30.9428001,  0.0000000],
            [-15.5594885, 27.62776720, -30.8654140,  0.0000000],
            [-15.5487778, 27.84004360, -30.7880279,  0.0000000],
            [-15.5380671, 28.05231990, -30.7106418,  0.0000000],
            [-15.5273563, 28.26459620, -30.6332557,  0.0000000],
            [-15.5166456, 28.47687260, -30.5558696,  0.0000000],
            [-15.5059349, 28.68914890, -30.4784835,  0.0000000],
            [-3.9147090, 32.69618100, -32.9129200,  0.0000000],
            [-22.3008469, 29.83540160, -29.6033096,  0.0000000],
            [0.9644129, 45.94330280, -24.8055364,  0.0000000],
            [30.3500314, 38.21103860, -28.0450462,  0.0000000],
            [7.6941848, 24.23188770, -27.3810511,  0.0000000],
            [2.4984632, 17.48460760, -24.0537099,  0.0000000],
            [3.2909380, 15.99839670, -23.9093136,  0.0000000],
            [-10.1996894, 15.40677260, -18.2423967,  0.0000000],
            [-20.1460848, 21.07209230,  0.0000000,  0.0000000],
            [-24.8474969,  5.50304010,  0.0000000,  0.0000000],
            [-27.4676742, -6.24492100,  0.0000000,  0.0000000],
            [-27.3029972, -13.99614710,  0.0000000,  0.0000000],
            [-19.9670108, -18.36130340,  0.0000000,  0.0000000],
            [-32.1472952, -20.79729510, 27.0343912,  0.0000000],
            [-33.4702358, -18.44551930, 22.5007703, 0.0000000],
            ], dtype=np.float64) 
        
        
        self.kCN = np.array([
            [0.07116904, 0.00000000, 0.00000000],
            [-0.21046272, -0.37377613, 0.00000000],
            [-0.00588643, 0.01229940, 0.00000000],
            [0.03659056, -0.00543602, 0.00000000],
            [-0.30472261, 0.00556489, 0.00000000],
            [-0.55477603, 0.15631408, 0.00000000],
            [-0.02818725, 0.06027542, 0.00000000],
            [-0.12537900, -0.02934837, 0.00000000],
            [0.11952872, -0.02001469, 0.00000000],
            [-0.07969349, -0.03183102, -0.02598776],
            [0.06047597, 0.01676901, 0.00000000],
            [0.03066908, -0.00315587, 0.03687894],
            [-0.07913111, 0.03614827, -0.08703979],
            [0.18789681, -0.08229514, -0.03042044],
            [0.07048836, -0.02076245, -0.09160855],
            [-0.01240442, -0.00611739, -0.00694984],
            [0.11846012, -0.00422548, -0.10808918],
            [-0.08330348, 0.01406891, -0.02103496],
            [0.00431781, 0.02249671, 0.00000000],
            [0.09861689, 0.08916793, 0.03360490],
            [-0.04244589, -0.01039491, 0.11290272],
            [-0.26131513, -0.09668192, 0.17000000],
            [-0.03811876, -0.03240250, 0.02890820],
            [-0.48366149, -0.00547793, 0.00727051],
            [-0.15528487, -0.00750273, 0.01000000],
            [-0.30453727, -0.06034576, 0.07000000],
            [-0.08636611, 0.05404216, 0.10000000],
            [0.17130286, -0.08594284, 0.02045707],
            [0.02336012, -0.03151736, 0.01150023],
            [0.04980615, 0.05813466, 0.00000000],
            [0.05567111, 0.05748990, -0.02131931],
            [0.18775492, -0.11667497, -0.01468127],
            [0.03228237, -0.06260172, 0.01759185],
            [-0.00314322, -0.04075826, 0.06444935],
            [-0.03614742, 0.03742490, -0.06477093],
            [-0.03657585, -0.00288971, 0.00662612],
            [0.02927284, 0.04327208, 0.00000000],
            [0.08783924, 0.05717898, 0.03126696],
            [0.08433168, -0.00730286, 0.03976138],
            [0.10938012, -0.06167863, 0.01437786],
            [0.15858874, -0.02495775, -0.07270306],
            [0.01240865, -0.06514497, 0.08912258],
            [-0.00695215, -0.02651591, 0.00906910],
            [0.03318922, -0.02027599, 0.01037674],
            [0.00444124, -0.02052962, 0.01091464],
            [-0.06534170, 0.00773043, 0.01035578],
            [-0.02041670, -0.04941126, 0.00507145],
            [0.10104763, -0.10742210, 0.00000000],
            [0.04647355, -0.00995082, -0.02852205],
            [0.16446031, -0.10004245, -0.08549641],
            [-0.05778929, 0.07863872, -0.00005389],
            [0.12681267, -0.04141598, 0.03085079],
            [-0.07187128, 0.04073371, -0.03576737],
            [-0.01384278, 0.00156952, -0.00051988],
            [0.01307258, 0.00901257, 0.00000000],
            [0.05149152, 0.04850276, 0.02866773],
            [0.06268874, -0.00242200, 0.02955699],
            [0.07756608, -0.00004407, 0.06487575],
            [0.07945053, -0.00004327, 0.06284641],
            [0.08133498, -0.00004248, 0.06081707],
            [0.08321944, -0.00004169, 0.05878773],
            [0.08510389, -0.00004089, 0.05675839],
            [0.08698834, -0.00004010, 0.05472904],
            [0.08887279, -0.00003930, 0.05269970],
            [0.09075725, -0.00003851, 0.05067036],
            [0.09264170, -0.00003772, 0.04864102],
            [0.09452615, -0.00003692, 0.04661168],
            [0.09641060, -0.00003613, 0.04458234],
            [0.09829505, -0.00003534, 0.04255300],
            [0.10017951, -0.00003454, 0.04052365],
            [0.10206396, -0.00003375, 0.03849431],
            [0.14365678, -0.01607540, 0.02182218],
            [0.10205952, -0.02748425, -0.03320988],
            [0.29046502, 0.00361699, -0.01600400],
            [0.11515463, -0.00359938, -0.03512912],
            [0.03746916, -0.00800203, -0.01295399],
            [-0.01285049, 0.01466161, 0.00829261],
            [0.08632843, 0.13889222, -0.01831911],
            [-0.03352364, -0.06229470, 0.00937469],
            [0.06338123, -0.16974940, 0.00000000],
            [-0.01035095, 0.02609025, 0.00000000],
            [-0.19929968, 0.17808807, 0.00000000],
            [-0.02029156, 0.04586688, 0.00000000],
            [-0.02278953, 0.05476139, 0.00000000],
            [-0.02597842, 0.00175268, 0.18437642],
            [-0.00041023, 0.00074457, -0.03563225]
            ], dtype=np.float64) * 0.0367493#eV to hartree conversion factor

        self.selfEnergy = np.array([
            [-11.9223639, -2.8061095,  0.0000000],
            [-20.9532631, -1.1297785,  0.0000000],
            [-6.9971696, -3.2655741,  0.0000000],
            [-9.8114460, -4.1691241,  0.0000000],
            [-11.5274724, -7.1785553,  0.0000000],
            [-15.7545853, -9.7975356,  0.0000000],
            [-18.8417536, -11.5390772,  0.0000000],
            [-17.9332316, -11.8400363,  0.0000000],
            [-21.1766889, -12.0966829,  0.0000000],
            [-23.8117049, -12.7315278, -2.6152816],
            [-8.0168587, -3.5357541,  0.0000000],
            [-8.8996217, -3.3930267, -2.3704000],
            [-11.4217432, -5.5010511, -3.7796816],
            [-14.1305658, -8.2750304, -3.1140941],
            [-15.7071105, -9.8725694, -1.6270802],
            [-20.1581637, -11.1864809, -0.8356505],
            [-26.2723861, -12.3657994, -1.9017158],
            [-22.0270820, -14.3127631, -2.9389433],
            [-6.6921296, -3.1081605,  0.0000000],
            [-8.0531971, -2.1761231, -0.2675983],
            [-8.7129730, -9.0228950, -2.3954879],
            [-8.5703364, -9.4933734, -2.2959946],
            [-8.7570928, -9.8674899, -1.2850031],
            [-8.8203392, -7.1020286, -1.3383282],
            [-9.5757701, -6.0802192, -3.7852117],
            [-10.1463332, -5.5418598, -3.7951519],
            [-10.5325577, -4.9644527, -2.6210546],
            [-10.5903637, -6.6362657, -2.3476564],
            [-11.3598265, -8.4558686, -3.0589423],
            [-11.0505242, -2.7759459,  0.0000000],
            [-11.2255436, -4.6379660, -0.5568933],
            [-15.5640015, -9.1779578, -1.1917480],
            [-16.8021037, -10.2020806, -0.1526587],
            [-20.6883851, -11.3475165, -0.0925094],
            [-19.8975374, -11.6316818, -1.1601961],
            [-17.7445664, -13.3156057, -1.3999865],
            [-6.6590644, -3.2967564,  0.0000000],
            [-6.3552773, -1.6881756, -0.1094950],
            [-7.3282377, -10.5232537, -1.2841045],
            [-8.3528075, -9.4151949, -1.9905675],
            [-8.9909092, -9.3825305, -1.0846865],
            [-8.3391136, -5.0423265, -3.3157522],
            [-9.5934551, -4.1238201, -2.8210863],
            [-10.4178466, -4.6661993, -4.3910247],
            [-11.2407436, -6.3230998, -2.7898020],
            [-11.0477513, -7.5245955, -1.3458846],
            [-10.7029327, -9.0008211, -3.1175174],
            [-12.0082253, -2.6607618,  0.0000000],
            [-12.8089312, -4.9517162, -0.6628616],
            [-20.5912595, -8.8280995, -2.6074284],
            [-19.1309518, -9.2461857,  0.3120269],
            [-18.8494281, -11.4037354, -0.5155777],
            [-17.9130306, -11.6266388, -1.4119025],
            [-15.8963959, -12.6153098, -0.9187936],
            [-6.2935338, -3.2602182,  0.0000000],
            [-5.6796095, -2.5183292, -0.8391169],
            [-8.1422087, -11.6440990, -0.8239123],
            [-8.2709324, -11.3009295, -3.2425383],
            [-8.3037702, -11.1705313, -3.1342334],
            [-8.3366080, -11.0401330, -3.0259285],
            [-8.3694458, -10.9097347, -2.9176236],
            [-8.4022836, -10.7793365, -2.8093186],
            [-8.4351215, -10.6489382, -2.7010137],
            [-8.4679593, -10.5185399, -2.5927088],
            [-8.5007971, -10.3881417, -2.4844039],
            [-8.5336349, -10.2577434, -2.3760990],
            [-8.5664727, -10.1273451, -2.2677941],
            [-8.5993105, -9.9969469, -2.1594891],
            [-8.6321483, -9.8665486, -2.0511842],
            [-8.6649861, -9.7361503, -1.9428793],
            [-8.6978239, -9.6057521, -1.8345744],
            [-8.3270480, -9.2677188, -0.9691591],
            [-9.1503016, -10.5247435, -0.9450823],
            [-9.6425716, -8.4038882, -0.4830525],
            [-10.2383908, -4.9432345, -1.3549000],
            [-10.0139372, -5.4818074, -2.6947002],
            [-11.1406750, -7.5775954, -3.8917827],
            [-11.3162420, -8.8896294, -3.0510272],
            [-12.1009764, -9.5056791, -2.2886714],
            [-12.1695315, -2.6656574,  0.0000000],
            [-20.1640068, -4.9875823,  0.0000000],
            [-22.0691007, -8.1233437,  0.0000000],
            [-19.8457402, -8.1841396,  0.0000000],
            [-22.7267689, -10.6638874,  0.0000000],
            [-16.2231111, -10.5823143, -0.4133880],
            [-13.6425470, -12.1716393, -0.6534981]]) * 0.0367493#eV to hartree conversion factor

        self.slaterExponent = np.array([
            [1.2209169, 2.0165983, 0.0000000],
            [1.5824890, 1.6000000, 0.0000000],
            [0.5005719, 0.4658228, 0.0000000],
            [0.9078603, 1.0039670, 0.0000000],
            [1.7660778, 1.6244411, 0.0000000],
            [1.9915841, 1.7845353, 0.0000000],
            [2.3225221, 2.0626548, 0.0000000],
            [2.6718248, 2.2239915, 0.0000000],
            [2.6161081, 2.4319703, 0.0000000],
            [2.9809477, 2.0785656, 1.8460393],
            [0.5467934, 0.5633952, 0.0000000],
            [1.0300807, 0.7916346, 0.8488197],
            [1.2874433, 1.0904909, 0.8900769],
            [1.4531665, 1.9693476, 1.0819287],
            [1.8253512, 1.7857588, 1.6661366],
            [1.8928587, 1.9498486, 1.6934107],
            [2.4427851, 2.0467885, 2.2975192],
            [2.4411522, 2.0047267, 1.9691892],
            [0.7780770, 0.7000000, 0.0000000],
            [1.1200000, 0.7483882, 1.5500000],
            [1.6075504, 1.0933429, 1.0700000],
            [1.5158150, 1.2148492, 1.0965783],
            [1.7421878, 1.1888016, 0.8934693],
            [1.8634588, 1.4228855, 1.4932821],
            [1.7327124, 1.4062701, 1.2782309],
            [1.9253779, 0.9262150, 1.2346615],
            [2.1305990, 1.9253832, 1.3966367],
            [2.3227981, 1.5682330, 1.5655420],
            [2.3709891, 1.8409795, 1.7423898],
            [1.4465300, 1.2040440, 0.0000000],
            [1.5059368, 1.3063387, 1.0909195],
            [1.8047369, 1.7982376, 1.0955633],
            [2.0023112, 1.9021607, 1.3993110],
            [2.2563431, 2.1483129, 1.8766631],
            [2.5042181, 2.1106542, 1.9511992],
            [2.7659636, 2.1692369, 1.8254810],
            [0.6993851, 0.8209591, 0.0000000],
            [1.1429377, 0.8089888, 1.5500000],
            [1.7000000, 1.2510491, 1.0686497],
            [1.7925035, 1.5123924, 1.1495969],
            [1.7107755, 1.3747235, 0.7765805],
            [1.7502703, 1.5772858, 1.4297760],
            [1.9777411, 2.0982690, 1.4810776],
            [2.0243462, 2.3480304, 1.6149520],
            [2.3713759, 2.1418555, 1.5716934],
            [2.3655400, 2.0465727, 1.7370737],
            [3.1103872, 1.7772461, 1.2958832],
            [1.7646331, 1.3127608, 0.0000000],
            [1.7863485, 1.4997607, 1.1650646],
            [2.2482408, 1.8768725, 1.1662079],
            [2.5053498, 1.9880208, 1.7329511],
            [2.5955339, 2.1294865, 1.8137622],
            [2.1518600, 2.1826296, 1.7939636],
            [3.1987630, 2.2995227, 1.7893151],
            [0.7514304, 0.6791606, 0.0000000],
            [1.2995061, 0.7121741, 1.6000000],
            [1.9000000, 1.4262742, 1.3072774],
            [1.8651798, 1.5610733, 1.2837815],
            [1.8755508, 1.5679201, 1.2726347],
            [1.8859217, 1.5747669, 1.2614880],
            [1.8962926, 1.5816137, 1.2503412],
            [1.9066636, 1.5884605, 1.2391944],
            [1.9170345, 1.5953073, 1.2280476],
            [1.9274054, 1.6021541, 1.2169008],
            [1.9377764, 1.6090009, 1.2057541],
            [1.9481473, 1.6158477, 1.1946073],
            [1.9585183, 1.6226945, 1.1834605],
            [1.9688892, 1.6295413, 1.1723137],
            [1.9792601, 1.6363881, 1.1611670],
            [1.9896311, 1.6432350, 1.1500202],
            [2.0000020, 1.6500818, 1.1388734],
            [2.0923623, 1.6165437, 1.2872624],
            [1.7483083, 1.6551025, 1.0233550],
            [2.0080568, 2.1084082, 1.7641136],
            [2.3094018, 1.9812974, 1.7312087],
            [2.3795997, 2.2387289, 1.9527035],
            [2.5582242, 2.5114785, 1.8368726],
            [2.7100253, 2.3315088, 1.8622968],
            [3.1211282, 2.3912459, 1.9835079],
            [2.1719281, 1.5852934, 0.0000000],
            [2.5798532, 1.8750064, 0.0000000],
            [2.8266565, 1.9846021, 0.0000000],
            [3.0792898, 2.1104258, 0.0000000],
            [3.2655001, 2.4581428, 0.0000000],
            [2.3566483, 2.4476546, 1.7730006],
            [3.5667425, 2.6010762, 1.9384224]
        ])
        #kQShell: The first-order coefficient with respect to charge $q$. It is a parameter related to an atom's "electron affinity" (more accurately, electronegativity).
        self.kQShell = np.array([
                [0.2591008, 0.0000000, 0.0000000],
                [0.0526662, -1.7836600, 0.0000000],
                [0.9636068, 0.1933068, 0.0000000],
                [0.8310555, 0.8910197, 0.0000000],
                [3.1865592, 0.9002623, 0.0000000],
                [0.1683176, 0.2988821, 0.0000000],
                [1.6770083, -0.2856884, 0.0000000],
                [0.5947188, 0.0916715, 0.0000000],
                [0.8966240, 0.2645049, 0.0000000],
                [0.1394174, 0.1181016, -0.1235510],
                [1.4578927, -2.1216651, 0.0000000],
                [-1.1457069, 0.6192238, -1.7052287],
                [1.1373983, -0.5030043, -0.2180697],
                [-1.6833805, 0.7676860, -0.3164855],
                [0.0638088, -0.0488732, 0.1144146],
                [-0.3628979, -0.1162502, 0.5229391],
                [-0.1771804, 0.3541391, 0.1082906],
                [0.0581999, 0.1172583, 0.2579057],
                [1.4171788, 0.6090963, 0.0000000],
                [-1.3567908, 0.7982482, -2.4352495],
                [-1.2515726, -0.2288979, -0.1126341],
                [-2.6329946, -0.5589503, -0.6584541],
                [-2.8582869, -0.9497022, -0.1743943],
                [-0.6557652, -1.1133287, 0.5864026],
                [-2.1012472, 0.0931727, -0.2296589],
                [-2.1531278, -1.3014729, -0.2054193],
                [-1.6422305, -0.2413613, 0.1032325],
                [0.0892590, 0.6269495, -0.0372394],
                [0.0790442, 0.0667641, -0.2727800],
                [0.5947695, -0.3462432, 0.0000000],
                [0.8467361, -0.2584210, -0.5108585],
                [0.2348166, -0.2410370, -0.2772269],
                [1.1862714, 1.3281349, 0.6150681],
                [0.1524644, 0.6961378, -1.0725308],
                [-0.0337658, 0.3715817, -0.6430662],
                [-0.0658049, 0.0634599, 1.3725483],
                [-2.1110486, -1.3455843, 0.0000000],
                [-0.7184537, 0.0777799, -0.8135551],
                [1.1237295, -0.9370621, 0.1974924],
                [-3.1290732, -0.6950275, 0.2953364],
                [-1.5564962, -0.4070963, -0.0034815],
                [-0.5021863, -2.0445824, 0.4028728],
                [-3.2915311, -1.3215133, -0.0229317],
                [-1.9247370, -3.0950796, 0.0242021],
                [-1.6523781, -0.2966759, -0.2394570],
                [-2.2410456, -1.0409758, -0.5186905],
                [-2.6933989, 1.6377067, 0.4579394],
                [0.6273704, -0.1339630, 0.0000000],
                [0.6476509, -0.3983757, -0.5489296],
                [0.3428358, -0.0107237, -0.0368582],
                [0.2761934, 0.3213207, 0.8605258],
                [-0.6640266, 0.6301827, -1.2044909],
                [0.1264617, 0.1662148, 0.0032647],
                [-0.1330582, 0.0494917, 2.8529059],
                [-0.9632540, -0.3851189, 0.0000000],
                [-0.9508608, -0.3461083, -1.0044558],
                [0.8353349, -0.6965739, 0.1247060],
                [0.2963503, -0.5819361, 0.2692711],
                [0.3049667, -0.5242933, 0.2546408],
                [0.3135831, -0.4666506, 0.2400105],
                [0.3221996, -0.4090079, 0.2253803],
                [0.3308160, -0.3513652, 0.2107500],
                [0.3394324, -0.2937224, 0.1961197],
                [0.3480488, -0.2360797, 0.1814894],
                [0.3566653, -0.1784370, 0.1668591],
                [0.3652817, -0.1207942, 0.1522288],
                [0.3738981, -0.0631515, 0.1375985],
                [0.3825146, -0.0055088, 0.1229683],
                [0.3911310, 0.0521340, 0.1083380],
                [0.3997474, 0.1097767, 0.0937077],
                [0.4083638, 0.1674194, 0.0790774],
                [0.2914598, 0.2000813, 0.1081073],
                [-1.8120352, 1.5015902, -0.0324750],
                [-1.5162303, -0.5627344, -0.0063703],
                [-0.9565221, -0.4840866, -0.7237461],
                [-1.7054596, -0.5268454, -0.2408914],
                [-1.8847069, -0.4888169, -0.1606430],
                [-1.7277302, -1.6224161, -0.4690687],
                [-3.8714610, 1.0468549, 0.5645830],
                [1.2916136, -0.3520016, 0.0000000],
                [2.7768835, -1.1939420, 0.0000000],
                [-0.1764125, 0.6143160, 0.0000000],
                [0.1602211, 0.4235069, 0.0000000],
                [-0.1211837, 0.6131814, 0.0000000],
                [-0.7035045, 0.1660577, 0.6738787],
                [0.2212935, 0.0793110, 1.3169147]]) * 0.0367493#eV to hartree conversion factor
        
        #kQAtom: The second-order coefficient with respect to charge $q$. It is a parameter related to an atom's "resistance to charge accumulation" (known as chemical hardness or self-repulsion).
        self.kQAtom = np.array([
             0.2473983, -0.7787934, -2.0181966,  0.2010595,  0.5604651,
             0.0908886, -0.0630602, -0.0504985,  0.0307638, -0.4585161,
            -1.1795902, -0.5383484, -0.2891414, -0.2539732, -0.4636669,
             0.0175812, -0.4977269, -1.8034383, -0.2695403,  0.2084025,
            -0.6961569, -0.0444615, -0.1157893, -0.1506473, -0.0193450,
             0.1358351, -0.0258463, -0.1389803,  0.1832504,  0.2795320,
            -0.2653902, -0.3850791, -0.4048451, -0.0331375, -0.3771185,
            -0.1964130,  1.5782426,  0.1783732, -0.5462958, -0.1563616,
             0.2100641,  0.5064106,  0.0670438,  0.2937971,  0.0788835,
             0.4874039, -0.4078822,  0.2261002, -0.4403034, -0.2304807,
            -0.3614513, -0.0339759, -0.1031505, -0.1821550,  0.9414952,
             0.7618755, -0.7252284, -0.8403891, -0.8014986, -0.7626081,
            -0.7237176, -0.6848271, -0.6459366, -0.6070461, -0.5681557,
            -0.5292652, -0.4903747, -0.4514842, -0.4125937, -0.3737032,
            -0.3348127, -0.1572535,  0.0625598, -0.1822002, -0.0546542,
             0.3585959,  0.0403085,  0.4160851,  0.5364732,  0.1234906,
            -0.5902190,  0.0731828,  0.1795929, -0.0924653, -0.3033414,
            -0.0946010]) * 0.0367493#eV to hartree conversion factor

        self.referenceOcc = np.array([
            [1.0, 0.0, 0.0],  [2.0, 0.0, 0.0],  [1.0, 0.0, 0.0],
            [2.0, 0.0, 0.0],  [2.0, 1.0, 0.0],  [1.0, 3.0, 0.0],
            [1.5, 3.5, 0.0],  [2.0, 4.0, 0.0],  [2.0, 5.0, 0.0],
            [2.0, 6.0, 0.0],  [1.0, 0.0, 0.0],  [2.0, 0.0, 0.0],
            [2.0, 1.0, 0.0],  [1.5, 2.5, 0.0],  [1.5, 3.5, 0.0],
            [2.0, 4.0, 0.0],  [2.0, 5.0, 0.0],  [2.0, 6.0, 0.0],
            [1.0, 0.0, 0.0],  [2.0, 0.0, 0.0],  [1.0, 1.0, 1.0],
            [1.0, 1.0, 2.0],  [1.0, 1.0, 3.0],  [1.0, 1.0, 4.0],
            [1.0, 1.0, 5.0],  [1.0, 1.0, 6.0],  [1.0, 1.0, 7.0],
            [1.0, 1.0, 8.0],  [1.0, 0.0, 10.0], [2.0, 0.0, 0.0],
            [2.0, 1.0, 0.0],  [1.5, 2.5, 0.0],  [1.5, 3.5, 0.0],
            [2.0, 4.0, 0.0],  [2.0, 5.0, 0.0],  [2.0, 6.0, 0.0],
            [1.0, 0.0, 0.0],  [2.0, 0.0, 0.0],  [1.0, 1.0, 1.0],
            [1.0, 1.0, 2.0],  [1.0, 1.0, 3.0],  [1.0, 1.0, 4.0],
            [1.0, 1.0, 5.0],  [1.0, 1.0, 6.0],  [1.0, 1.0, 7.0],
            [1.0, 1.0, 8.0],  [1.0, 0.0, 10.0], [2.0, 0.0, 0.0],
            [2.0, 1.0, 0.0],  [2.0, 2.0, 0.0],  [2.0, 3.0, 0.0],
            [2.0, 4.0, 0.0],  [2.0, 5.0, 0.0],  [2.0, 6.0, 0.0],
            [1.0, 0.0, 0.0],  [2.0, 0.0, 0.0],  [1.0, 1.0, 1.0],
            [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],
            [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],
            [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],
            [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],
            [1.0, 1.0, 1.0],  [1.0, 1.0, 1.0],  [1.0, 1.0, 2.0],
            [1.0, 1.0, 3.0],  [1.0, 1.0, 4.0],  [1.0, 1.0, 5.0],
            [1.0, 1.0, 6.0],  [1.0, 1.0, 7.0],  [1.0, 1.0, 8.0],
            [1.0, 0.0, 10.0],  [2.0, 0.0, 0.0],  [2.0, 1.0, 0.0],
            [2.0, 2.0, 0.0],  [2.0, 3.0, 0.0],  [2.0, 4.0, 0.0],
            [2.0, 5.0, 0.0],  [2.0, 6.0, 0.0]])

        # Atomic radii in Bohr
        self.atomicRad = np.array([
                            0.32, 0.37, 1.30, 0.99, 0.84, 0.75, 0.71, 0.64,
                            0.60, 0.62, 1.60, 1.40, 1.24, 1.14, 1.09, 1.04,
                            1.00, 1.01, 2.00, 1.74, 1.59, 1.48, 1.44, 1.30,
                            1.29, 1.24, 1.18, 1.17, 1.22, 1.20, 1.23, 1.20,
                            1.20, 1.18, 1.17, 1.16, 2.15, 1.90, 1.76, 1.64,
                            1.56, 1.46, 1.38, 1.36, 1.34, 1.30, 1.36, 1.40,
                            1.42, 1.40, 1.40, 1.37, 1.36, 1.36, 2.38, 2.06,
                            1.94, 1.84, 1.90, 1.88, 1.86, 1.85, 1.83, 1.82,
                            1.81, 1.80, 1.79, 1.77, 1.77, 1.78, 1.74, 1.64,
                            1.58, 1.50, 1.41, 1.36, 1.32, 1.30, 1.30, 1.32,
                            1.44, 1.45, 1.50, 1.42, 1.48, 1.46, 2.42, 2.11,
                            2.01, 1.90, 1.84, 1.83, 1.80, 1.80, 1.73, 1.68,
                            1.68, 1.68, 1.65, 1.67, 1.73, 1.76, 1.61, 1.57,
                            1.49, 1.43, 1.41, 1.34, 1.29, 1.28, 1.21, 1.22,
                            1.36, 1.43, 1.62, 1.75, 1.65, 1.57])# * 1.8897261246 


        # Pauling electronegativities, used for the covalent coordination number.
        self.paulingEN = np.array([
                        2.20, 3.00,  # H,He
                        0.98, 1.57, 2.04, 2.55, 3.04, 3.44, 3.98, 4.50,  # Li-Ne
                        0.93, 1.31, 1.61, 1.90, 2.19, 2.58, 3.16, 3.50,  # Na-Ar
                        0.82, 1.00,  # K,Ca
                        1.36, 1.54, 1.63, 1.66, 1.55,  # Sc-
                        1.83, 1.88, 1.91, 1.90, 1.65,  # -Zn
                        1.81, 2.01, 2.18, 2.55, 2.96, 3.00,  # Ga-Kr
                        0.82, 0.95,  # Rb,Sr
                        1.22, 1.33, 1.60, 2.16, 1.90,  # Y-
                        2.20, 2.28, 2.20, 1.93, 1.69,  # -Cd
                        1.78, 1.96, 2.05, 2.10, 2.66, 2.60,  # In-Xe
                        0.79, 0.89,  # Cs,Ba
                        1.10, 1.12, 1.13, 1.14, 1.15, 1.17, 1.18,  # La-Eu
                        1.20, 1.21, 1.22, 1.23, 1.24, 1.25, 1.26,  # Gd-Yb
                        1.27, 1.30, 1.50, 2.36, 1.90,  # Lu-
                        2.20, 2.20, 2.28, 2.54, 2.00,  # -Hg
                        1.62, 2.33, 2.02, 2.00, 2.20, 2.20,])  # Tl-Rn

        
    def _set_basisfunc_param(self):
        
        
        # Exponents from first row Table I-V.
        self.pAlpha1 = np.array([ 
                        [2.709498091e-1], # 1s
                        [1.012151084e-1], # 2s
                        [5.296881757e-2], # 3s
                        [3.264600274e-2], # 4s
                        [2.216912938e-2], # 5s
                        [1.759666885e-1], # 2p
                        [9.113614253e-2], # 3p
                        [5.578350235e-2], # 4p
                        [3.769845216e-2], # 5p
                        [1.302270363e-1], # 3d
                        [7.941656339e-2], # 4d
                        [5.352200793e-2], # 5d
                        [1.033434062e-1], # 4f
                        [6.952785407e-2], # 5f
                        [8.565417784e-2]]) # 5g

        
        # Exponents from second row Table I-V.
        self.pAlpha2 = np.array([
                        [8.518186635e-1, 1.516232927e-1], # 1s
                        [1.292278611e-1, 4.908584205e-2], # 2s
                        [6.694095822e-1, 5.837135094e-2], # 3s
                        [2.441785453e-1, 4.051097664e-2], # 4s
                        [1.213425654e-1, 3.133152144e-2], # 5s
                        [4.323908358e-1, 1.069439065e-1], # 2p
                        [1.458620964e-1, 5.664210742e-2], # 3p
                        [6.190052680e-2, 2.648418407e-2], # 4p
                        [2.691294191e-1, 3.980805011e-2], # 5p
                        [2.777427345e-1, 8.336507714e-2], # 3d
                        [1.330958892e-1, 5.272119659e-2], # 4d
                        [6.906014388e-2, 3.399457777e-2], # 5d
                        [2.006693538e-1, 6.865384900e-2], # 4f
                        [1.156094555e-1, 4.778940916e-2], # 5f
                        [1.554531559e-1, 5.854079811e-2]])# 5g
      
        # Coefficients from second row Table I-V.
        self.pCoeff2 = np.array([ 
                        [ 4.301284983e-1, 6.789135305e-1], # 1s
                        [ 7.470867124e-1, 2.855980556e-1], # 2s
                        [-1.529645716e-1, 1.051370110e+0], # 3s
                        [-3.046656896e-1, 1.146877294e+0], # 4s
                        [-5.114756049e-1, 1.307377277e+0], # 5s
                        [ 4.522627513e-1, 6.713122642e-1], # 2p
                        [ 5.349653144e-1, 5.299607212e-1], # 3p
                        [ 8.743116767e-1, 1.513640107e-1], # 4p
                        [-1.034227010e-1, 1.033376378e+0], # 5p
                        [ 4.666137923e-1, 6.644706516e-1], # 3d
                        [ 4.932764167e-1, 5.918727866e-1], # 4d
                        [ 6.539405185e-1, 3.948945302e-1], # 5d
                        [ 4.769346276e-1, 6.587383976e-1], # 4f
                        [ 4.856637346e-1, 6.125980914e-1], # 5f
                        [ 4.848298074e-1, 6.539381621e-1]])# 5g
                        
        
        # Exponents from third row Table I-V.
        self.pAlpha3 = np.array([
            [2.227660584e+0, 4.057711562e-1, 1.098175104e-1], # 1s
            [2.581578398e+0, 1.567622104e-1, 6.018332272e-2], # 2s
            [5.641487709e-1, 6.924421391e-2, 3.269529097e-2], # 3s
            [2.267938753e-1, 4.448178019e-2, 2.195294664e-2], # 4s
            [1.080198458e-1, 4.408119382e-2, 2.610811810e-2], # 5s
            [9.192379002e-1, 2.359194503e-1, 8.009805746e-2], # 2p
            [2.692880368e+0, 1.489359592e-1, 5.739585040e-2], # 3p
            [4.859692220e-1, 7.430216918e-2, 3.653340923e-2], # 4p
            [2.127482317e-1, 4.729648620e-2, 2.604865324e-2], # 5p
            [5.229112225e-1, 1.639595876e-1, 6.386630021e-2], # 3d
            [1.777717219e-1, 8.040647350e-2, 3.949855551e-2], # 4d
            [4.913352950e-1, 7.329090601e-2, 3.594209290e-2], # 5d
            [3.483826963e-1, 1.249380537e-1, 5.349995725e-2], # 4f
            [1.649233885e-1, 7.487066646e-2, 3.735787219e-2], # 5f
            [2.545432122e-1, 1.006544376e-1, 4.624463922e-2]],) # 5g
      

        # Coefficients from third row Table I-V.
        self.pCoeff3 = np.array([    
            [ 1.543289673e-1, 5.353281423e-1, 4.446345422e-1], # 1s
            [-5.994474934e-2, 5.960385398e-1, 4.581786291e-1], # 2s
            [-1.782577972e-1, 8.612761663e-1, 2.261841969e-1], # 3s
            [-3.349048323e-1, 1.056744667e+0, 1.256661680e-1], # 4s
            [-6.617401158e-1, 7.467595004e-1, 7.146490945e-1], # 5s
            [ 1.623948553e-1, 5.661708862e-1, 4.223071752e-1], # 2p
            [-1.061945788e-2, 5.218564264e-1, 5.450015143e-1], # 3p
            [-6.147823411e-2, 6.604172234e-1, 3.932639495e-1], # 4p
            [-1.389529695e-1, 8.076691064e-1, 2.726029342e-1], # 5p
            [ 1.686596060e-1, 5.847984817e-1, 4.056779523e-1], # 3d
            [ 2.308552718e-1, 6.042409177e-1, 2.595768926e-1], # 4d
            [-2.010175008e-2, 5.899370608e-1, 4.658445960e-1], # 5d
            [ 1.737856685e-1, 5.973380628e-1, 3.929395614e-1], # 4f
            [ 1.909729355e-1, 6.146060459e-1, 3.059611271e-1], # 5f
            [ 1.780980905e-1, 6.063757846e-1, 3.828552923e-1]],) # 5g
      


        # Exponents from forth row Table I-V.
        self.pAlpha4 = np.array([ 
                 [5.216844534e+0, 9.546182760e-1,  # 1s
                 2.652034102e-1, 8.801862774e-2], 
                 [1.161525551e+1, 2.000243111e+0,  # 2s
                 1.607280687e-1, 6.125744532e-2], 
                 [1.513265591e+0, 4.262497508e-1,  # 3s
                 7.643320863e-2, 3.760545063e-2], 
                 [3.242212833e-1, 1.663217177e-1,  # 4s
                 5.081097451e-2, 2.829066600e-2], 
                 [8.602284252e-1, 1.189050200e-1,  # 5s
                 3.446076176e-2, 1.974798796e-2], 
                 [1.798260992e+0, 4.662622228e-1,  # 2p
                 1.643718620e-1, 6.543927065e-2], 
                 [1.853180239e+0, 1.915075719e-1,  # 3p
                 8.655487938e-2, 4.184253862e-2], 
                 [1.492607880e+0, 4.327619272e-1,  # 4p
                 7.553156064e-2, 3.706272183e-2], 
                 [3.962838833e-1, 1.838858552e-1,  # 5p
                 4.943555157e-2, 2.750222273e-2], 
                 [9.185846715e-1, 2.920461109e-1,  # 3d
                 1.187568890e-1, 5.286755896e-2], 
                 [1.995825422e+0, 1.823461280e-1,  # 4d
                 8.197240896e-2, 4.000634951e-2], 
                 [4.230617826e-1, 8.293863702e-2,  # 5d
                 4.590326388e-2, 2.628744797e-2], 
                 [5.691670217e-1, 2.074585819e-1,  # 4f
                 9.298346885e-2, 4.473508853e-2], 
                 [2.017831152e-1, 1.001952178e-1,  # 5f
                 5.447006630e-2, 3.037569283e-2], 
                 [3.945205573e-1, 1.588100623e-1,  # 5g
                 7.646521729e-2, 3.898703611e-2]])

        # Coefficients from forth row Table I-V.
        self.pCoeff4 = np.array([ 
                [ 5.675242080e-2, 2.601413550e-1,  # 1s
                 5.328461143e-1, 2.916254405e-1], 
                [-1.198411747e-2,-5.472052539e-2,  # 2s
                 5.805587176e-1, 4.770079976e-1], 
                [-3.295496352e-2,-1.724516959e-1,  # 3s
                 7.518511194e-1, 3.589627317e-1], 
                [-1.120682822e-1,-2.845426863e-1,  # 4s
                 8.909873788e-1, 3.517811205e-1], 
                 [1.103657561e-2,-5.606519023e-1,  # 5s
                 1.179429987e+0, 1.734974376e-1], 
                 [5.713170255e-2, 2.857455515e-1,  # 2p
                 5.517873105e-1, 2.632314924e-1], 
                [-1.434249391e-2, 2.755177589e-1,  # 3p
                 5.846750879e-1, 2.144986514e-1], 
                [-6.035216774e-3,-6.013310874e-2,  # 4p
                 6.451518200e-1, 4.117923820e-1], 
                [-1.801459207e-2,-1.360777372e-1,  # 5p
                 7.533973719e-1, 3.409304859e-1], 
                [ 5.799057705e-2, 3.045581349e-1,  # 3d
                 5.601358038e-1, 2.432423313e-1], 
                [-2.816702620e-3, 2.177095871e-1,  # 4d
                 6.058047348e-1, 2.717811257e-1], 
                [-2.421626009e-2, 3.937644956e-1,  # 5d
                 5.489520286e-1, 1.190436963e-1], 
                 [5.902730589e-2, 3.191828952e-1,  # 4f
                 5.639423893e-1, 2.284796537e-1], 
                 [9.174268830e-2, 4.023496947e-1,  # 5f
                 4.937432100e-1, 1.254001522e-1], 
                 [6.010484250e-2, 3.309738329e-1,  # 5g
                 5.655207585e-1, 2.171122608e-1]])


        # Exponents from fifth row Table I-V.
        self.pAlpha5 = np.array([ 
                 [1.130563696e+1, 2.071728178e+0, 5.786484833e-1, # 1s
                 1.975724573e-1, 7.445271746e-2],
                 [8.984956862e+0, 1.673710636e+0, 1.944726668e-1, # 2s
                 8.806345634e-2, 4.249068522e-2],
                 [4.275877914e+0, 1.132409433e+0, 4.016256968e-1, # 3s
                 7.732370620e-2, 3.800708627e-2], 
                 [2.980263783e+0, 3.792228833e-1, 1.789717224e-1, # 4s
                 5.002110360e-2, 2.789361681e-2], 
                 [7.403763257e-1, 1.367990863e-1, 9.135301779e-2, # 5s
                 3.726907315e-2, 2.241490836e-2], 
                 [3.320386533e+0, 8.643257633e-1, 3.079819284e-1, # 2p
                 1.273309895e-1, 5.606243164e-2], 
                 [6.466803859e+0, 1.555914802e+0, 1.955925255e-1, # 3p
                 8.809647701e-2, 4.234835707e-2], 
                 [1.091977298e+0, 3.719985051e-1, 8.590019352e-2, # 4p
                 4.786503860e-2, 2.730479990e-2], 
                 [3.422168934e-1, 1.665099900e-1, 5.443732013e-2, # 5p
                 3.367775277e-2, 2.091949042e-2], 
                 [1.539033958e+0, 4.922090297e-1, 2.029756928e-1, # 3d
                 9.424112917e-2, 4.569058269e-2],
                 [1.522122079e+0, 2.173041823e-1, 1.084876577e-1, # 4d
                 5.836797641e-2, 3.206682246e-2],
                 [9.702946470e-1, 3.603270196e-1, 8.668717752e-2, # 5d
                 4.833708379e-2, 2.751899341e-2], 
                 [8.925960415e-1, 3.277589120e-1, 1.492869962e-1, # 4f
                 7.506099109e-2, 3.892475795e-2], 
                 [1.670735676e+0, 2.072477219e-1, 1.024709357e-1, # 5f
                 5.537913898e-2, 3.072866652e-2], 
                 [5.895429375e-1, 2.393343780e-1, 1.172646904e-1, # 5g
                 6.254074479e-2, 3.411243214e-2]])

        # Coefficients from fifth row Table I-V.
        self.pCoeff5 = np.array([ 
                 [2.214055312e-2, 1.135411520e-1, 3.318161484e-1, # 1s
                 4.825700713e-1, 1.935721966e-1], 
                [-1.596349096e-2,-5.685884883e-2, 3.698265599e-1, # 2s
                 5.480512593e-1, 1.472634893e-1], 
                [-3.920358850e-3,-4.168430506e-2,-1.637440990e-1, # 3s
                 7.419373723e-1, 3.724364929e-1], 
                 [1.513948997e-3,-7.316801518e-2,-3.143703799e-1, # 4s
                 9.032615169e-1, 3.294210848e-1], 
                 [1.375523371e-2,-3.097344179e-1,-3.199192259e-1, # 5s
                 1.084547038e+0, 3.345288361e-1], 
                [ 2.079051117e-2, 1.235472099e-1, 3.667738886e-1, # 2p
                 4.834930290e-1, 1.653444074e-1], 
                [-2.329023747e-3,-1.357395221e-2, 2.632185383e-1, # 3p
                 5.880427024e-1, 2.242794445e-1], 
                [-1.143929558e-2,-6.322651538e-2, 4.398907721e-1, # 4p
                 5.245859166e-1, 1.017072253e-1], 
                [-3.113958289e-2,-1.374007017e-1, 5.573881018e-1, # 5p
                 4.855428100e-1, 6.605423564e-2], 
                 [2.020869128e-2, 1.321157923e-1, 3.911240346e-1, # 3d
                 4.779609701e-1, 1.463662294e-1], 
                [-3.673711876e-3, 1.167122499e-1, 4.216476416e-1, # 4d
                 4.547673415e-1, 1.037803318e-1], 
                [-3.231527611e-3,-2.434931372e-2, 3.440817054e-1, # 5d
                 5.693674376e-1, 1.511340183e-1], 
                 [1.999839052e-2, 1.395427440e-1, 4.091508237e-1, # 4f
                 4.708252119e-1, 1.328082566e-1],
                [-7.301193568e-4, 8.414991343e-2, 3.923683153e-1, # 5f
                 5.040033146e-1, 1.328979300e-1],
                 [1.998085812e-2, 1.460384050e-1, 4.230565459e-1, # 5g
                 4.635699665e-1, 1.226411691e-1]])
     


        # Exponents from sixth row Table I-V.
        self.pAlpha6 = np.array([ 
               [2.310303149e+1, 4.235915534e+0, 1.185056519e+0,  # 1s
               4.070988982e-1, 1.580884151e-1, 6.510953954e-2], 
               [2.768496241e+1, 5.077140627e+0, 1.426786050e+0,  # 2s
               2.040335729e-1, 9.260298399e-2, 4.416183978e-2], 
               [3.273031938e+0, 9.200611311e-1, 3.593349765e-1,  # 3s
               8.636686991e-2, 4.797373812e-2, 2.724741144e-2], 
               [1.365346e+00,   4.393213e-01,   1.877069e-01,    # 4s (old)
               9.360270e-02,   5.052263e-02,   2.809354e-02],   
               [1.410128298e+0, 5.077878915e-1, 1.847926858e-1,  # 5s
               1.061070594e-1, 3.669584901e-2, 2.213558430e-2], 
               [5.868285913e+0, 1.530329631e+0, 5.475665231e-1,  # 2p
               2.288932733e-1, 1.046655969e-1, 4.948220127e-2], 
               [5.077973607e+0, 1.340786940e+0, 2.248434849e-1,  # 3p
               1.131741848e-1, 6.076408893e-2, 3.315424265e-2], 
               [1.365346e+00,   4.393213e-01,   1.877069e-01,    # 4p (old)
               9.360270e-02,   5.052263e-02,   2.809354e-02],   
               [3.778623374e+0, 3.499121109e-1, 1.683175469e-1,  # 5p
               5.404070736e-2, 3.328911801e-2, 2.063815019e-2], 
               [2.488296923e+0, 7.981487853e-1, 3.311327490e-1,  # 3d
               1.559114463e-1, 7.877734732e-2, 4.058484363e-2], 
               [4.634239420e+0, 1.341648295e+0, 2.209593028e-1,  # 4d
               1.101467943e-1, 5.904190370e-2, 3.232628887e-2], 
               [8.820520428e-1, 3.410838409e-1, 9.204308840e-2,  # 5d
               5.472831774e-2, 3.391202830e-2, 2.108227374e-2], 
               [1.357718039e+0, 5.004907278e-1, 2.296565064e-1,  # 4f
               1.173146814e-1, 6.350097171e-2, 3.474556673e-2], 
               [1.334096840e+0, 2.372312347e-1, 1.269485744e-1,  # 5f
               7.290318381e-2, 4.351355997e-2, 2.598071843e-2], 
               [8.574668996e-1, 3.497184772e-1, 1.727917060e-1,  # 5g
               9.373643151e-2, 5.340032759e-2, 3.057364464e-2]],)
   

        # Coefficients from sixth row Table I-V.
        self.pCoeff6 = np.array([
       [9.163596280e-3, 4.936149294e-2, 1.685383049e-1,  # 1s
       3.705627997e-1, 4.164915298e-1, 1.303340841e-1], 
      [-4.151277819e-3,-2.067024148e-2,-5.150303337e-2,  # 2s
       3.346271174e-1, 5.621061301e-1, 1.712994697e-1], 
      [-6.775596947e-3,-5.639325779e-2,-1.587856086e-1,  # 3s
       5.534527651e-1, 5.015351020e-1, 7.223633674e-2], 
       [3.775056e-03,  -5.585965e-02,  -3.192946e-01,    # 4s (old)
      -2.764780e-02,   9.049199e-01,   3.406258e-01],   
      [2.695439582e-3, 1.850157487e-2,-9.588628125e-2,  # 5s
      -5.200673560e-1, 1.087619490e+0, 3.103964343e-1], 
       [7.924233646e-3, 5.144104825e-2, 1.898400060e-1,  # 2p
       4.049863191e-1, 4.012362861e-1, 1.051855189e-1], 
      [-3.329929840e-3,-1.419488340e-2, 1.639395770e-1,  # 3p
       4.485358256e-1, 3.908813050e-1, 7.411456232e-2], 
      [-7.052075e-03,  -5.259505e-02,  -3.773450e-02,    # 4p (old)
       3.874773e-01,   5.791672e-01,   1.221817e-01],   
       [1.163246387e-4,-2.920771322e-2,-1.381051233e-1,  # 5p
       5.706134877e-1, 4.768808140e-1, 6.021665516e-2], 
       [7.283828112e-3, 5.386799363e-2, 2.072139149e-1,  # 3d
       4.266269092e-1, 3.843100204e-1, 8.902827546e-2], 
      [-4.749842876e-4,-3.566777891e-3, 1.108670481e-1,  # 4d
       4.159646930e-1, 4.621672517e-1, 1.081250196e-1], 
      [-4.097377019e-3,-2.508271857e-2, 2.648458555e-1,  # 5d
       5.097437054e-1, 2.654483467e-1, 2.623132212e-2], 
       [6.930234381e-3, 5.634263745e-2, 2.217065797e-1,  # 4f
       4.411388883e-1, 3.688112625e-1, 7.787514504e-2], 
      [-9.486751531e-4, 4.624275998e-2, 2.373699784e-1,  # 5f
       4.589112231e-1, 3.205010548e-1, 5.077063693e-2], 
       [6.729778096e-3, 5.874145170e-2, 2.339955227e-1,  # 5g
       4.512983737e-1, 3.552053926e-1, 6.974153145e-2]])

        self.pAlpha6s = np.array([
                 5.800292686e-1, 2.718262251e-1, 7.938523262e-2, # 6s
                 4.975088254e-2, 2.983643556e-2, 1.886067216e-2])
        self.pCoeff6s = np.array([
                4.554359511e-3, 5.286443143e-2,-7.561016358e-1, # 6s
                -2.269803820e-1, 1.332494651e+0, 3.622518293e-1])

        self.pAlpha6p = np.array([
                6.696537714e-1, 1.395089793e-1, 8.163894960e-2, # 6p
                4.586329272e-2, 2.961305556e-2, 1.882221321e-2])
        self.pCoeff6p = np.array([
                2.782723680e-3,-1.282887780e-1,-2.266255943e-1, #6p
                4.682259383e-1, 6.752048848e-1, 1.091534212e-1])

    def _set_bond_param(self):
        self.en_polynominal_param = 10 ** (-2) * np.array([
            [29.84522887,
            -1.70549806,
            6.54013762,
            6.39169003,
            6.00000000,
            5.60000000],
            [-8.87843763,
            2.10878369,
            0.08009374,
            -0.85808076,
            -1.15000000,
            -1.30000000]]).T
        
